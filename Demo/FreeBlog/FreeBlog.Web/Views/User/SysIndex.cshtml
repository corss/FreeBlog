<input type="hidden" id="hfRoleList" value="@ViewBag.RoleList" />
<div id="app" class="page-container">
    <div class="condition">
        <span class="select-box inline">
            <select class="select" style="width:80px;" v-model="roleID">
                <option v-for="(item,index) in roleList" v-bind:value="item.ID">{{item.Title}}</option>
            </select>
        </span>&nbsp;
        <span class="select-box inline">
            <select class="select" style="width:80px;" v-model="stateID">
                <option v-for="(item,index) in stateList" v-bind:value="index">{{item}}</option>
            </select>
        </span>&nbsp;
        <input type="text" placeholder="用户名、姓名" class="input-text" style="width:180px;" maxlength="20" v-model="title" />
        <input type="text" placeholder="手机号" class="input-text" style="width:100px;" maxlength="11" v-model="phone" />
        <a class="btn btn-secondary radius" v-on:click="getData(1)"><i class="Hui-iconfont">&#xe665;</i> 查询</a>
    </div>
    <div class="cl pd-5 bg-1 bk-gray text-r">
        <a class="btn btn-primary radius" v-on:click="myImport()"><i class="Hui-iconfont">&#xe642;</i>导入</a>
        <a class="btn btn-primary radius" v-on:click="myExport()"><i class="Hui-iconfont">&#xe641;</i>导出</a>
        <a class="btn btn-success radius" v-on:click="myEdit()"><i class="Hui-iconfont">&#xe600;</i>添加</a>
        <a class="btn btn-danger radius" v-on:click="myDelete()"><i class="Hui-iconfont">&#xe6e2;</i>删除</a>
    </div>
    <table class="table">
        <thead>
            <tr>
                <td width="20">
                    <input id="ck" type="checkbox" title="全选" onclick="ckAll(this.checked)" />
                </td>
                <td width="60">
                    序号
                </td>
                <td>
                    用户名
                </td>
                <td>
                    昵称
                </td>
                <td>
                    姓名
                </td>
                <td>
                    手机
                </td>
                <td>
                    角色
                </td>
                <td width="80">
                    状态
                </td>
                <td width="140">
                    日期
                </td>
                <td width="80">
                    查看
                </td>
            </tr>
        </thead>
        <tbody id="pageBody">
            <tr v-for="(item,index) in list">
                <td class="text-c">
                    <input type="checkbox" name="cks" v-bind:value="item.ID" />
                </td>
                <td class="text-c">{{index+1}}</td>
                <td class="text-c">{{item.UserName}}</td>
                <td class="text-c">{{item.NickName}}</td>
                <td class="text-c">{{item.FullName}}</td>
                <td class="text-c">{{item.MobilePhone}}</td>
                <td class="text-c">{{item.RoleName}}</td>
                <td class="text-c" v-bind:class="{'green':item.State==2}">{{stateList[item.State]}}</td>
                <td class="text-c">{{item.AddDate}}</td>
                <td class="text-c">
                    <a title="编辑" href="javascript:;" v-on:click="myEdit(item.ID)" class="ml-5"><i class="Hui-iconfont f-16">&#xe6df;</i></a>
                    <a title="删除" href="javascript:;" v-on:click="myDelete(item.ID)" class="ml-5"><i class="Hui-iconfont f-16">&#xe6e2;</i></a>
                </td>
            </tr>
        </tbody>
    </table>
    <div id="page"></div>
</div>

<script type="text/javascript">
    let that;
    let app = new Vue({
        el: '#app',
        data: {
            list: {},
            pageData: {},
            title: '',
            phone: '',
            stateList: ['状态', '未审核', '已审核', '禁用', '删除'],
            stateID: 0,
            roleList: [],
            roleID: 0,
            file: {}
        },
        created: function () {
            that = this;
            that.roleList = JSON.parse($("#hfRoleList").val());
            that.getData(1);
        },
        mounted: function () { },
        methods: {
            getData: function (pageIndex) {
                if (pageIndex)
                    that.pageData.pageIndex = pageIndex;
                that.pageData.RoleID = that.roleID;
                that.pageData.StateID = that.stateID;
                that.pageData.Title = that.title;
                that.pageData.Phone = that.phone;
                var index = layer.load(0, { shade: [0.1, '#000'] });  // 加载层
                $.ajax({
                    type: "post",
                    url: "/User/List",
                    dataType: "json",
                    async: true,
                    data: that.pageData,
                    success: function (e) {
                        layer.close(index); // 隐藏加载层
                        if (e.success) {
                            that.list = e.data;
                            // 设置角色文本显示
                            //that.list.forEach(function (item, index) {
                            //    item.Role = that.roleList.filter(function (value) {
                            //        return value.ID == item.RoleID
                            //    })[0].Title;
                            //});
                            // 取消勾选、设置样式
                            tableBindStyle();
                            // 分页
                            laypage({
                                cont: 'page',   //分页需要显示的地方
                                pages: Math.ceil(e.count / e.size),    //总页数
                                curr: e.index,     //当前页
                                groups: 9,      //连续显示分页数
                                skip: true,     //是否开启跳页
                                first: '首页',
                                last: '尾页',
                                skin: '#01AAED',   // molv 加载内置皮肤，也可以直接赋值16进制颜色值，如:#c00
                                prev: '<', //若不显示，设置false即可
                                next: '>', //若不显示，设置false即可
                                jump: function (e, first) { //触发分页后的回调
                                    if (!first) { //一定要加此判断，否则初始时会无限刷新
                                        that.getData(e.curr);
                                    }
                                }
                            });
                        } else {
                            //错误
                            console.log("错误");
                        }
                    }
                });
            },
            myEdit: function (id) {
                var index = layers.url("编辑", 1000, 550, "/User/SysItem/" + id);
                //layer.full(index); //最大化
            },
            myDelete: function (id) {
                id = getTableSelectID(id);
                if (id) {
                    let index = layer.confirm('是否删除选中数据？', {
                        title: '操作',
                        icon: 3,
                        btn: ['确定', '取消'] //按钮
                    }, function () {
                        layer.load(0, { shade: [0.1, '#000'] });  // 加载层
                        $.ajax({
                            type: "post",
                            url: "/User/Delete",
                            dataType: "json",
                            async: true,
                            data: { ID: id },
                            success: function (e) {
                                layer.close(index); // 隐藏加载层
                                if (e.success) {
                                    layers.alertOK('删除成功', 5, sxs());
                                } else {
                                    layers.Info('删除失败', 5, sxs());
                                }
                            }
                        });
                    }, function () { });
                } else {
                    layers.Info("请先选择数据！");
                }
            },
            myExport: function () {
                let index = layer.confirm('是否导出数据？', {
                    title: '操作',
                    icon: 3,
                    btn: ['确定', '取消'] //按钮
                }, function () {
                    layer.close(index);
                    var url = "/User/Export?";
                    if (that.roleID > 0)
                        url += "&RoleID=" + that.roleID;
                    if (that.stateID > 0)
                        url += "&StateID=" + that.stateID;
                    if (that.title)
                        url += "&Title=" + that.title;
                    if (that.phone)
                        url += "&Phone=" + that.phone;

                    // 1.js打开新窗口
                    //window.open(url);
                    // 用form提交
                    var fileName = "testAjaxDownload.txt";
                    var form = $("<form></form>").attr("action", url).attr("method", "post");
                    form.append($("<input></input>").attr("type", "hidden").attr("name", "fileName").attr("value", fileName));
                    form.appendTo('body').submit().remove();
                }, function () { });
            },
            myImport: function () {
                layers.url("导入", 500, 300, "/User/UserImport/");
            }
        },
    });
    function sxs() {
        app.getData();
    }
</script>
